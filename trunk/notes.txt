**** TODO -------------------

- VqbForm::queryChanged: remove outputs not in the query
- apply prefixing on resulting query
- add colors to restrictiolayouts (like Kate colors the open files), to better highlight membership
- color output comboboxes? (setStyleSheet)
- add predicates to output as well?
- fix CB size problems




**** Future considerations ------------

- something like using WordNet for similar words, and searching based on that

- When adding to Konduit: add it to a *different folder*

- KDE4 HCI Checklist


****  Vqb improvements --------------

- Show prefixes


**** Thesis

- emphasize data-driven aspect



**** Old-Vqb style Vqb ----------

Advantages
----------
- better overview of things already added
- cleaner interface

Disadvantages
--------------
- Inflexibility










---------- FOAF INFERENCING ----------------------

name:
    - domain = owl:Thing

Person:
    - subClassOf
            foaf:Agent (not subclass of owl:Thing)
            pim:Person (not subclass of owl:Thing)
            geo:SpatiaThing (not subclass of owl:Thing)




---------------------- BACKUP -------------------------

void VqbForm::addConstraint( bool isAttached, QString parentVarName, QString parentClass )
{
    //QVBoxLayout *layout = dynamic_cast<QVBoxLayout*>( this->layout() );
    if( d->topLayout ) {
        Constraint *c = new Constraint( d->constraintStrings.count(), this, isAttached, parentVarName, parentClass );
        d->topLayout->addWidget( c  );
        d->constraintStrings.append("");

        connect( this, SIGNAL(refresh()),
                 c, SLOT(returnConstraint()) );

        connect( c, SIGNAL( constraintChanged(int,QString) ),
                 this, SLOT( constraintChanged(int,QString) ));

        /*connect( c, SIGNAL(attachConstraint(int,QString,QString)),
                 this, SLOT(attachConstraint(int,QString,QString)) );
                 */
    }
}

void VqbForm::constraintChanged( int index, QString constraint )
{
    kDebug() << "Constraint " << index << " has changed:" << constraint;
    if( index < d->constraintStrings.count() ) {
        d->constraintStrings[index] = constraint;
    }
    refreshQuery();
}
